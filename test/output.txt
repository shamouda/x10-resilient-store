Starting [TestKillMultiplePlaces]   maxIterations=40 killPeriod=100 killedPercentage=0.5 enableConflict=true
<node id=0  name=10786@Saras-MacBook-Pro.local>
   <place id=0>
</node>

<node id=1  name=10791@Saras-MacBook-Pro.local>
   <place id=1>
</node>

<node id=2  name=10790@Saras-MacBook-Pro.local>
   <place id=2>
</node>

<node id=3  name=10792@Saras-MacBook-Pro.local>
   <place id=3>
</node>

<node id=4  name=10793@Saras-MacBook-Pro.local>
   <place id=4>
</node>

<node id=5  name=10794@Saras-MacBook-Pro.local>
   <place id=5>
</node>


Place(0) [PartitionTable] Node partitions 
Node0->>> Part-0 - 5 - 
Node1->>> Part-0 - 1 - 
Node2->>> Part-1 - 2 - 
Node3->>> Part-2 - 3 - 
Node4->>> Part-4 - 3 - 
Node5->>> Part-4 - 5 - 
Place(0) [PartitionTable] Place partitions 
Place0->>> Part-0 - 5 - 
Place1->>> Part-0 - 1 - 
Place2->>> Part-1 - 2 - 
Place3->>> Part-2 - 3 - 
Place4->>> Part-4 - 3 - 
Place5->>> Part-4 - 5 - 
Place(0) [PartitionTable] Parition places
0 => 0 - 1 - 
1 => 1 - 2 - 
2 => 2 - 3 - 
3 => 3 - 4 - 
4 => 4 - 5 - 
5 => 5 - 0 - 
Place(0) [DataStore] Initialization done successfully ...
Place(5) [PartitionTable] Node partitions 
Node0->>> Part-0 - 5 - 
Node1->>> Part-0 - 1 - 
Node2->>> Part-1 - 2 - 
Node3->>> Part-2 - 3 - 
Node4->>> Part-4 - 3 - 
Node5->>> Part-4 - 5 - 
Place(5) [PartitionTable] Place partitions 
Place0->>> Part-0 - 5 - 
Place1->>> Part-0 - 1 - 
Place2->>> Part-1 - 2 - 
Place3->>> Part-2 - 3 - 
Place4->>> Part-4 - 3 - 
Place5->>> Part-4 - 5 - 
Place(5) [DataStore] Initialization done successfully ...
Place(2) [PartitionTable] Node partitions 
Node0->>> Part-0 - 5 - 
Node1->>> Part-0 - 1 - 
Node2->>> Part-1 - 2 - 
Node3->>> Part-2 - 3 - 
Node4->>> Part-4 - 3 - 
Node5->>> Part-4 - 5 - 
Place(2) [PartitionTable] Place partitions 
Place0->>> Part-0 - 5 - 
Place1->>> Part-0 - 1 - 
Place2->>> Part-1 - 2 - 
Place3->>> Part-2 - 3 - 
Place4->>> Part-4 - 3 - 
Place5->>> Part-4 - 5 - 
Place(2) [DataStore] Initialization done successfully ...
Place(3) [PartitionTable] Node partitions 
Node0->>> Part-0 - 5 - 
Node1->>> Part-0 - 1 - 
Node2->>> Part-1 - 2 - 
Node3->>> Part-2 - 3 - 
Node4->>> Part-4 - 3 - 
Node5->>> Part-4 - 5 - 
Place(3) [PartitionTable] Place partitions 
Place0->>> Part-0 - 5 - 
Place1->>> Part-0 - 1 - 
Place2->>> Part-1 - 2 - 
Place3->>> Part-2 - 3 - 
Place4->>> Part-4 - 3 - 
Place5->>> Part-4 - 5 - 
Place(3) [DataStore] Initialization done successfully ...
Place(4) [PartitionTable] Node partitions 
Node0->>> Part-0 - 5 - 
Node1->>> Part-0 - 1 - 
Node2->>> Part-1 - 2 - 
Node3->>> Part-2 - 3 - 
Node4->>> Part-4 - 3 - 
Node5->>> Part-4 - 5 - 
Place(4) [PartitionTable] Place partitions 
Place0->>> Part-0 - 5 - 
Place1->>> Part-0 - 1 - 
Place2->>> Part-1 - 2 - 
Place3->>> Part-2 - 3 - 
Place4->>> Part-4 - 3 - 
Place5->>> Part-4 - 5 - 
Place(4) [DataStore] Initialization done successfully ...
Place(1) [PartitionTable] Node partitions 
Node0->>> Part-0 - 5 - 
Node1->>> Part-0 - 1 - 
Node2->>> Part-1 - 2 - 
Node3->>> Part-2 - 3 - 
Node4->>> Part-4 - 3 - 
Node5->>> Part-4 - 5 - 
Place(1) [PartitionTable] Place partitions 
Place0->>> Part-0 - 5 - 
Place1->>> Part-0 - 1 - 
Place2->>> Part-1 - 2 - 
Place3->>> Part-2 - 3 - 
Place4->>> Part-4 - 3 - 
Place5->>> Part-4 - 5 - 
Place(1) [DataStore] Initialization done successfully ...
Place(1) [ResilientMapImpl] get[200001]  { await ... 
Place(2) [ResilientMapImpl] get[300001]  { await ... 
Place(1) [ReplicaClient] Key[N] ParitionId: 0 Replicas[0  1   ]
Place(1) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(2) [ReplicaClient] Key[P] ParitionId: 2 Replicas[2  3   ]
Place(2) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(0) [ResilientMapImpl] get[100001]  { await ... 
Place(1) [ReplicaClient] Added Pending Request <request TransactionId[200001] ReqId[1] type[Get]  key[N]>
Place(1) [ReplicaClient] SubmittingToPlace[Place(0)] request: <request TransactionId[200001] ReqId[1] type[Get]  key[N]>
Place(1) [ReplicaClient] SubmittingToPlace[Place(1)] request: <request TransactionId[200001] ReqId[1] type[Get]  key[N]>
Place(1) [Replica(1)] getOrAddActiveTransaction transId[200001] clientId[1] ...
Place(1) [Partition] Partition [0]  GET_V (N) ...
Place(1) [MapRequest] TransId[200001] From [1] adding response for request === <request TransactionId[200001] ReqId[1] type[Get]  key[N]> ..... output[null] exception[null] 
Place(2) [ReplicaClient] Added Pending Request <request TransactionId[300001] ReqId[1] type[Get]  key[P]>
Place(2) [ReplicaClient] SubmittingToPlace[Place(2)] request: <request TransactionId[300001] ReqId[1] type[Get]  key[P]>
Place(2) [ReplicaClient] SubmittingToPlace[Place(3)] request: <request TransactionId[300001] ReqId[1] type[Get]  key[P]>
Place(2) [Replica(2)] getOrAddActiveTransaction transId[300001] clientId[2] ...
Place(2) [Partition] Partition [2]  GET_V (P) ...
Place(2) [MapRequest] TransId[300001] From [2] adding response for request === <request TransactionId[300001] ReqId[1] type[Get]  key[P]> ..... output[null] exception[null] 
Place(3) [ResilientMapImpl] get[400001]  { await ... 
Place(3) [ReplicaClient] Key[G] ParitionId: 5 Replicas[0  5   ]
Place(3) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(3) [ReplicaClient] Added Pending Request <request TransactionId[400001] ReqId[1] type[Get]  key[G]>
Place(3) [ReplicaClient] SubmittingToPlace[Place(0)] request: <request TransactionId[400001] ReqId[1] type[Get]  key[G]>
Place(3) [ReplicaClient] SubmittingToPlace[Place(5)] request: <request TransactionId[400001] ReqId[1] type[Get]  key[G]>
Place(4) [ResilientMapImpl] get[500001]  { await ... 
Place(0) [ReplicaClient] Key[A] ParitionId: 5 Replicas[0  5   ]
Place(0) [Replica(0)] getOrAddActiveTransaction transId[200001] clientId[1] ...
Place(3) [Replica(3)] getOrAddActiveTransaction transId[300001] clientId[2] ...
Place(3) [Partition] Partition [2]  GET_V (P) ...
Place(0) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(4) [ReplicaClient] Key[K] ParitionId: 3 Replicas[4  3   ]
Place(4) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(4) [ReplicaClient] Added Pending Request <request TransactionId[500001] ReqId[1] type[Get]  key[K]>
Place(4) [ReplicaClient] SubmittingToPlace[Place(4)] request: <request TransactionId[500001] ReqId[1] type[Get]  key[K]>
Place(5) [ResilientMapImpl] get[600001]  { await ... 
Place(5) [Replica(5)] getOrAddActiveTransaction transId[400001] clientId[3] ...
Place(5) [ReplicaClient] Key[D] ParitionId: 2 Replicas[2  3   ]
Place(5) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(5) [ReplicaClient] Added Pending Request <request TransactionId[600001] ReqId[1] type[Get]  key[D]>
Place(5) [ReplicaClient] SubmittingToPlace[Place(2)] request: <request TransactionId[600001] ReqId[1] type[Get]  key[D]>
Place(2) [MapRequest] TransId[300001] From [3] adding response for request === <request TransactionId[300001] ReqId[1] type[Get]  key[P]> ..... output[null] exception[null] 
Place(2) [Replica(2)] getOrAddActiveTransaction transId[600001] clientId[5] ...
Place(2) [Partition] Partition [2]  GET_V (D) ...
Place(4) [ReplicaClient] SubmittingToPlace[Place(3)] request: <request TransactionId[500001] ReqId[1] type[Get]  key[K]>
Place(4) [Replica(4)] getOrAddActiveTransaction transId[500001] clientId[4] ...
Place(5) [ReplicaClient] SubmittingToPlace[Place(3)] request: <request TransactionId[600001] ReqId[1] type[Get]  key[D]>
Place(5) [Partition] Partition [5]  GET_V (G) ...
Place(5) [MapRequest] TransId[600001] From [2] adding response for request === <request TransactionId[600001] ReqId[1] type[Get]  key[D]> ..... output[null] exception[null] 
Place(4) [Partition] Partition [3]  GET_V (K) ...
Place(4) [MapRequest] TransId[500001] From [4] adding response for request === <request TransactionId[500001] ReqId[1] type[Get]  key[K]> ..... output[null] exception[null] 
Place(0) [Replica(0)] getOrAddActiveTransaction transId[400001] clientId[3] ...
Place(0) [Partition] Partition [0]  GET_V (N) ...
Place(0) [ReplicaClient] Added Pending Request <request TransactionId[100001] ReqId[1] type[Get]  key[A]>
Place(3) [Replica(3)] getOrAddActiveTransaction transId[600001] clientId[5] ...
Place(3) [MapRequest] TransId[400001] From [5] adding response for request === <request TransactionId[400001] ReqId[1] type[Get]  key[G]> ..... output[null] exception[null] 
Place(0) [Partition] Partition [5]  GET_V (G) ...
Place(0) [ReplicaClient] SubmittingToPlace[Place(0)] request: <request TransactionId[100001] ReqId[1] type[Get]  key[A]>
Place(3) [Partition] Partition [2]  GET_V (D) ...
Place(3) [Replica(3)] getOrAddActiveTransaction transId[500001] clientId[4] ...
Place(1) [MapRequest] TransId[200001] From [0] adding response for request === <request TransactionId[200001] ReqId[1] type[Get]  key[N]> ..... output[null] exception[null] 
Place(3) [Partition] Partition [3]  GET_V (K) ...
Place(5) [MapRequest] TransId[600001] From [3] adding response for request === <request TransactionId[600001] ReqId[1] type[Get]  key[D]> ..... output[null] exception[null] 
Place(3) [MapRequest] TransId[400001] From [0] adding response for request === <request TransactionId[400001] ReqId[1] type[Get]  key[G]> ..... output[null] exception[null] 
Place(0) [ReplicaClient] SubmittingToPlace[Place(5)] request: <request TransactionId[100001] ReqId[1] type[Get]  key[A]>
Place(0) [Replica(0)] getOrAddActiveTransaction transId[100001] clientId[0] ...
Place(4) [MapRequest] TransId[500001] From [3] adding response for request === <request TransactionId[500001] ReqId[1] type[Get]  key[K]> ..... output[null] exception[null] 
Place(0) [Partition] Partition [5]  GET_V (A) ...
Place(5) [Replica(5)] getOrAddActiveTransaction transId[100001] clientId[0] ...
Place(0) [MapRequest] TransId[100001] From [0] adding response for request === <request TransactionId[100001] ReqId[1] type[Get]  key[A]> ..... output[null] exception[null] 
Place(5) [Partition] Partition [5]  GET_V (A) ...
Place(0) [MapRequest] TransId[100001] From [5] adding response for request === <request TransactionId[100001] ReqId[1] type[Get]  key[A]> ..... output[null] exception[null] 
Place(1) [ResilientMapImpl] get[200001]          ... released }    Success=true
Place(1) [ReplicaClient] Key[N] ParitionId: 0 Replicas[0  1   ]
Place(1) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(1) [ReplicaClient] Added Pending Request <request TransactionId[200001] ReqId[2] type[Put]  key[N]>
Place(1) [ReplicaClient] SubmittingToPlace[Place(0)] request: <request TransactionId[200001] ReqId[2] type[Put]  key[N]>
Place(1) [ReplicaClient] SubmittingToPlace[Place(1)] request: <request TransactionId[200001] ReqId[2] type[Put]  key[N]>
Place(1) [ResilientMapImpl] put[200001]  { await ... 
Place(1) [Replica(1)] getOrAddActiveTransaction transId[200001] clientId[1] ...
Place(0) [ResilientMapImpl] get[100001]          ... released }    Success=true
Place(0) [ReplicaClient] Key[A] ParitionId: 5 Replicas[0  5   ]
Place(0) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(0) [ReplicaClient] Added Pending Request <request TransactionId[100001] ReqId[2] type[Put]  key[A]>
Place(0) [ReplicaClient] SubmittingToPlace[Place(0)] request: <request TransactionId[100001] ReqId[2] type[Put]  key[A]>
Place(0) [ReplicaClient] SubmittingToPlace[Place(5)] request: <request TransactionId[100001] ReqId[2] type[Put]  key[A]>
Place(4) [ResilientMapImpl] get[500001]          ... released }    Success=true
Place(4) [ReplicaClient] Key[K] ParitionId: 3 Replicas[4  3   ]
Place(4) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(4) [ReplicaClient] Added Pending Request <request TransactionId[500001] ReqId[2] type[Put]  key[K]>
Place(4) [ReplicaClient] SubmittingToPlace[Place(4)] request: <request TransactionId[500001] ReqId[2] type[Put]  key[K]>
Place(4) [ReplicaClient] SubmittingToPlace[Place(3)] request: <request TransactionId[500001] ReqId[2] type[Put]  key[K]>
Place(4) [ResilientMapImpl] put[500001]  { await ... 
Place(4) [Replica(4)] getOrAddActiveTransaction transId[500001] clientId[4] ...
Place(4) [MapRequest] TransId[500001] From [4] adding response for request === <request TransactionId[500001] ReqId[2] type[Put]  key[K]> ..... output[null] exception[null] 
Place(1) [MapRequest] TransId[200001] From [1] adding response for request === <request TransactionId[200001] ReqId[2] type[Put]  key[N]> ..... output[Place(5) [ResilientMapImpl] get[600001]          ... released }    Success=true
Place(5) [ReplicaClient] Key[D] ParitionId: 2 Replicas[2  3   ]
Place(5) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(5) [ReplicaClient] Added Pending Request <request TransactionId[600001] ReqId[2] type[Put]  key[D]>
Place(5) [ReplicaClient] SubmittingToPlace[Place(2)] request: <request TransactionId[600001] ReqId[2] type[Put]  key[D]>
Place(5) [ReplicaClient] SubmittingToPlace[Place(3)] request: <request TransactionId[600001] ReqId[2] type[Put]  key[D]>
Place(5) [ResilientMapImpl] put[600001]  { await ... 
Place(5) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(5) [ReplicaClient] Added Pending Request <request TransactionId[600001] ReqId[3] type[Abort]  key[null]>
Place(5) [ReplicaClient] allReplicasActive= true
Place(5) [ReplicaClient] Submitting request: <request TransactionId[600001] ReqId[3] type[Abort]  key[null]>
Place(5) [MapRequest] Completing request: <request TransactionIPlace(0) [ResilientMapImpl] put[100001]  { await ... 
Place(0) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(0) [ReplicaClient] Added Pending Request <request TransactionId[100001] ReqId[3] type[Abort]  key[null]>
Place(0) [ReplicaClient] allReplicasActive= true
Place(0) [ReplicaClient] Submitting request: <request TransactionId[100001] ReqId[3] type[Abort]  key[null]>
Place(0) [MapRequest] Completing request: <request TransactionId[100001] ReqId[3] type[Abort]  key[null]>  Exception: null
Place(0) [ResilientMapImpl] abortTransaction[100001]  { await ... 
Place(0) [Replica(0)] getOrAddActiveTransaction transId[100001] clientId[0] ...
null] exception[null] 
Place(1) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(1) [ReplicaClient] Added Pending Request <request TransactionId[200001] ReqId[3] type[Abort]  key[null]>
Place(1) [ReplicaClient] allReplicasActive= true
Place(1) [ReplicaClient] Submitting request: <request TransactionId[200001] ReqId[3] type[Abort]  key[null]>
Place(2) [ResilientMapImpl] get[300001]          ... released }    Success=true
Place(2) [ReplicaClient] Key[P] ParitionId: 2 Replicas[2  3   ]
Place(2) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(2) [ReplicaClient] Added Pending Request <request TransactionId[300001] ReqId[2] type[Put]  key[P]>
Place(2) [ReplicaClient] SubmittingToPlace[Place(2)] request: <request TransactionId[300001] ReqId[2] type[Put]  key[P]>
Place(2) [ReplicaClient] SubmittingToPlace[Place(3)] request: <request TransactionId[300001] ReqId[2] type[Put]  key[P]>
Place(2) [ResilientMapImpl] put[300001]  { await ... 
d[600001] ReqId[3] type[Abort]  key[null]>  Exception: null
Place(5) [ResilientMapImpl] abortTransaction[600001]  { await ... 
Place(4) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(4) [ReplicaClient] Added Pending Request <request TransactionId[500001] ReqId[3] type[Abort]  key[null]>
Place(4) [ReplicaClient] allReplicasActive= true
Place(4) [ReplicaClient] Submitting request: <request TransactionId[500001] ReqId[3] type[Abort]  key[null]>
Place(1) [MapRequest] Completing request: <request TransactionId[200001] ReqId[3] type[Abort]  key[null]>  Exception: null
Place(1) [ResilientMapImpl] abortTransaction[200001]  { await ... 
Place(1) [Replica(1)] calling abortNoResponse for transactionId[200001] ...
Place(0) [Replica(0)] calling abortNoResponse for transactionId[200001] ...
Place(0) [Replica(0)] calling abortNoResponse for transactionId[100001] ...
Place(5) [Replica(5)] getOrAddActiveTransaction transId[100001] clientId[0] ...
Place(5) [Replica(5)] calling abortNoResponse for transactionId[100001] ...
Place(2) [Replica(2)] getOrAddActiveTransaction transId[300001] clientId[2] ...
Place(2) [MapRequest] TransId[300001] From [2] adding response for request === <request TransactionId[300001] ReqId[2] type[Put]  key[P]> ..... output[null] exception[null] 
Place(2) [Replica(2)] getOrAddActiveTransaction transId[600001] clientId[5] ...
Place(0) [Replica(0)] getOrAddActiveTransaction transId[200001] clientId[1] ...
Place(0) [Replica(0)] (put) Transaction [200001]  is not active. Return TransactionAbortedException ...
Place(3) [ResilientMapImpl] get[400001]          ... released }    Success=true
Place(4) [MapRequest] Completing request: <request TransactionId[500001] ReqId[3] type[Abort]  key[null]>  Exception: null
Place(4) [ResilientMapImpl] abortTransaction[500001]  { await ... 
Place(4) [Replica(4)] calling abortNoResponse for transactionId[500001] ...
Place(2) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(2) [Replica(2)] calling abortNoResponse for transactionId[600001] ...
Place(2) [ReplicaClient] Added Pending Request <request TransactionId[300001] ReqId[3] type[Abort]  key[null]>
Place(2) [ReplicaClient] allReplicasActive= true
Place(2) [ReplicaClient] Submitting request: <request TransactionId[300001] ReqId[3] type[Abort]  key[null]>
Place(2) [MapRequest] Completing request: <request TransactionId[300001] ReqId[3] type[Abort]  key[null]>  Exception: null
Place(2) [ResilientMapImpl] abortTransaction[300001]  { await ... 
Place(5) [MapRequest] TransId[600001] From [2] adding response for request === <request TransactionId[600001] ReqId[2] type[Put]  key[D]> ..... output[null] exception[null] 
Place(2) [Replica(2)] calling abortNoResponse for transactionId[300001] ...
Place(0) [MapRequest] TransId[100001] From [0] adding response for request === <request TransactionId[100001] ReqId[2] type[Put]  key[A]> ..... output[null] exception[null] 
Place(3) [ReplicaClient] Key[G] ParitionId: 5 Replicas[0  5   ]
Place(3) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(3) [ReplicaClient] Added Pending Request <request TransactionId[400001] ReqId[2] type[Put]  key[G]>
Place(3) [ReplicaClient] SubmittingToPlace[Place(0)] request: <request TransactionId[400001] ReqId[2] type[Put]  key[G]>
Place(1) [MapRequest] TransId[200001] From [0] adding response for request === <request TransactionId[200001] ReqId[2] type[Put]  key[N]> ..... output[null] exception[x10.util.resilient.map.exception.TransactionAbortedException] 
Place(3) [ReplicaClient] SubmittingToPlace[Place(5)] request: <request TransactionId[400001] ReqId[2] type[Put]  key[G]>
Place(3) [Replica(3)] calling abortNoResponse for transactionId[600001] ...
Place(0) [MapRequest] TransId[100001] From [5] adding response for request === <request TransactionId[100001] ReqId[2] type[Put]  key[A]> ..... output[null] exception[null] 
Place(0) [Replica(0)] getOrAddActiveTransaction transId[400001] clientId[3] ...
Place(3) [Replica(3)] calling abortNoResponse for transactionId[300001] ...
Place(5) [Replica(5)] getOrAddActiveTransaction transId[400001] clientId[3] ...
Place(3) [ResilientMapImpl] put[400001]  { await ... 
Place(3) [Replica(3)] calling abortNoResponse for transactionId[500001] ...
Place(3) [Replica(3)] getOrAddActiveTransaction transId[500001] clientId[4] ...
Place(3) [Replica(3)] getOrAddActiveTransaction transId[600001] clientId[5] ...
Place(3) [Replica(3)] (put) Transaction [500001]  is not active. Return TransactionAbortedException ...
Place(3) [ReplicaClient] notifyDeadPlaces: deadReplicas count is [0] ...
Place(3) [Replica(3)] (put) Transaction [600001]  is not active. Return TransactionAbortedException ...
Place(3) [Replica(3)] getOrAddActiveTransaction transId[300001] clientId[2] ...
Place(3) [ReplicaClient] Added Pending Request <request TransactionId[400001] ReqId[3] type[Abort]  key[null]>
Place(4) [MapRequest] TransId[500001] From [3] adding response for request === <request TransactionId[500001] ReqId[2] type[Put]  key[K]> ..... output[null] exception[x10.util.resilient.map.exception.TransactionAbortedException] 
Place(3) [ReplicaClient] allReplicasActive= true
Place(3) [Replica(3)] (put) Transaction [300001]  is not active. Return TransactionAbortedException ...
Place(5) [MapRequest] TransId[600001] From [3] adding response for request === <request TransactionId[600001] ReqId[2] type[Put]  key[D]> ..... output[null] exception[x10.util.resilient.map.exception.TransactionAbortedException] 
Place(3) [ReplicaClient] Submitting request: <request TransactionId[400001] ReqId[3] type[Abort]  key[null]>
Place(3) [MapRequest] TransId[400001] From [5] adding response for request === <request TransactionId[400001] ReqId[2] type[Put]  key[G]> ..... output[null] exception[null] 
Place(2) [MapRequest] TransId[300001] From [3] adding response for request === <request TransactionId[300001] ReqId[2] type[Put]  key[P]> ..... output[null] exception[x10.util.resilient.map.exception.TransactionAbortedException] 
Place(0) [Replica(0)] calling abortNoResponse for transactionId[400001] ...
Place(3) [MapRequest] TransId[400001] From [0] adding response for request === <request TransactionId[400001] ReqId[2] type[Put]  key[G]> ..... output[null] exception[null] 
Place(3) [MapRequest] Completing request: <request TransactionId[400001] ReqId[3] type[Abort]  key[null]>  Exception: null
Place(3) [ResilientMapImpl] abortTransaction[400001]  { await ... 
Place(5) [Replica(5)] calling abortNoResponse for transactionId[400001] ...
Place(2) [ReplicaClient] checkPendingTransactions: new iteration ...
Place(2) [Replica(2)] checkDeadReplicaClient new iteration ...
Place(3) [ReplicaClient] checkPendingTransactions: new iteration ...
Place(1) [ReplicaClient] checkPendingTransactions: new iteration ...
Place(1) [Replica(1)] checkDeadReplicaClient new iteration ...
Place(0) [Replica(0)] checkDeadReplicaClient new iteration ...
Place(3) [Replica(3)] checkDeadReplicaClient new iteration ...
Place(4) [ReplicaClient] checkPendingTransactions: new iteration ...
Place(4) [Replica(4)] checkDeadReplicaClient new iteration ...
Place(0) [ReplicaClient] checkPendingTransactions: new iteration ...
Place(5) [ReplicaClient] checkPendingTransactions: new iteration ...
Place(5) [Replica(5)] checkDeadReplicaClient new iteration ...
++++++ Test failed.
